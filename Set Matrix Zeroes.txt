class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        
        bool firstRowZero = false;
        bool firstColZero = false;
        
        // Check if the first row should be zeroed out
        for (int i = 0; i < n; ++i) {
            if (matrix[0][i] == 0) {
                firstRowZero = true;
                break;
            }
        }
        
        // Check if the first column should be zeroed out
        for (int i = 0; i < m; ++i) {
            if (matrix[i][0] == 0) {
                firstColZero = true;
                break;
            }
        }
        
        // Use the first cell of each row and column as flags
        for (int i = 1; i < m; ++i) {
            for (int j = 1; j < n; ++j) {
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0; // Set the first cell of the row to 0
                    matrix[0][j] = 0; // Set the first cell of the column to 0
                }
            }
        }
        
        // Zero out rows based on the flags in the first cell of each row
        for (int i = 1; i < m; ++i) {
            if (matrix[i][0] == 0) {
                for (int j = 1; j < n; ++j) {
                    matrix[i][j] = 0;
                }
            }
        }
        
        // Zero out columns based on the flags in the first cell of each column
        for (int j = 1; j < n; ++j) {
            if (matrix[0][j] == 0) {
                for (int i = 1; i < m; ++i) {
                    matrix[i][j] = 0;
                }
            }
        }
        
        // Zero out the first row and/or first column if necessary
        if (firstRowZero) {
            for (int i = 0; i < n; ++i) {
                matrix[0][i] = 0;
            }
        }
        
        if (firstColZero) {
            for (int i = 0; i < m; ++i) {
                matrix[i][0] = 0;
            }
        }
    }
};
